[["!module",{"tag":"!module","type":"module","imports":["lang/math","lang/vararg","lang/memory","lang/system","lang/stdio","lang/types","structs/List"]}],["ArrayList",{"abstract":false,"extends":"List","tag":"ArrayList","name":"ArrayList","unmangled":false,"doc":"/**\n * Resizable-array implementation of the List interface. Implements all\n * optional list operations, and permits all elements, including null.\n * In addition to implementing the List interface, this class provides\n * methods to manipulate the size of the array that is used internally\n * to store the list. (This class is roughly equivalent to Vector,\n * except that it is unsynchronized.)\n */","fullName":"structs_ArrayList__ArrayList","type":"class","members":[["new",{"arguments":[],"extern":false,"tag":"memberFunction(ArrayList, new)","name":"new","unmangled":false,"doc":null,"genericTypes":["T"],"fullName":"structs_ArrayList__ArrayList_new","modifiers":["static"],"type":"memberFunction","returnType":"ArrayList"}],["init",{"arguments":[],"extern":false,"tag":"memberFunction(ArrayList, init)","name":"init","unmangled":false,"doc":null,"genericTypes":[],"fullName":"structs_ArrayList__ArrayList_init","modifiers":[],"type":"memberFunction","returnType":null}],["new",{"arguments":[["capacity","Int",null]],"extern":false,"tag":"memberFunction(ArrayList, new~withCapacity)","name":"new","unmangled":false,"doc":null,"genericTypes":["T"],"fullName":"structs_ArrayList__ArrayList_new_withCapacity","modifiers":["static"],"type":"memberFunction","returnType":"ArrayList"}],["init",{"arguments":[["capacity","Int",null]],"extern":false,"tag":"memberFunction(ArrayList, init~withCapacity)","name":"init","unmangled":false,"doc":null,"genericTypes":[],"fullName":"structs_ArrayList__ArrayList_init_withCapacity","modifiers":[],"type":"memberFunction","returnType":null}],["new",{"arguments":[["data","pointer(T)",null],["size","Int",null]],"extern":false,"tag":"memberFunction(ArrayList, new~withData)","name":"new","unmangled":false,"doc":null,"genericTypes":["T"],"fullName":"structs_ArrayList__ArrayList_new_withData","modifiers":["static"],"type":"memberFunction","returnType":"ArrayList"}],["init",{"arguments":[["data","pointer(T)",null],["size","Int",null]],"extern":false,"tag":"memberFunction(ArrayList, init~withData)","name":"init","unmangled":false,"doc":null,"genericTypes":[],"fullName":"structs_ArrayList__ArrayList_init_withData","modifiers":[],"type":"memberFunction","returnType":null}],["add",{"arguments":[["element","T",null]],"extern":false,"tag":"memberFunction(ArrayList, add)","name":"add","unmangled":false,"doc":null,"genericTypes":[],"fullName":"structs_ArrayList__ArrayList_add","modifiers":[],"type":"memberFunction","returnType":null}],["add",{"arguments":[["index","Int",null],["element","T",null]],"extern":false,"tag":"memberFunction(ArrayList, add~withIndex)","name":"add","unmangled":false,"doc":null,"genericTypes":[],"fullName":"structs_ArrayList__ArrayList_add_withIndex","modifiers":[],"type":"memberFunction","returnType":null}],["clear",{"arguments":[],"extern":false,"tag":"memberFunction(ArrayList, clear)","name":"clear","unmangled":false,"doc":null,"genericTypes":[],"fullName":"structs_ArrayList__ArrayList_clear","modifiers":[],"type":"memberFunction","returnType":null}],["get",{"arguments":[["index","Int",null]],"extern":false,"tag":"memberFunction(ArrayList, get)","name":"get","unmangled":false,"doc":null,"genericTypes":[],"fullName":"structs_ArrayList__ArrayList_get","modifiers":[],"type":"memberFunction","returnType":"T"}],["indexOf",{"arguments":[["element","T",null]],"extern":false,"tag":"memberFunction(ArrayList, indexOf)","name":"indexOf","unmangled":false,"doc":null,"genericTypes":[],"fullName":"structs_ArrayList__ArrayList_indexOf","modifiers":[],"type":"memberFunction","returnType":"Int"}],["lastIndexOf",{"arguments":[["element","T",null]],"extern":false,"tag":"memberFunction(ArrayList, lastIndexOf)","name":"lastIndexOf","unmangled":false,"doc":null,"genericTypes":[],"fullName":"structs_ArrayList__ArrayList_lastIndexOf","modifiers":[],"type":"memberFunction","returnType":"Int"}],["removeAt",{"arguments":[["index","Int",null]],"extern":false,"tag":"memberFunction(ArrayList, removeAt)","name":"removeAt","unmangled":false,"doc":null,"genericTypes":[],"fullName":"structs_ArrayList__ArrayList_removeAt","modifiers":[],"type":"memberFunction","returnType":"T"}],["remove",{"arguments":[["element","T",null]],"extern":false,"tag":"memberFunction(ArrayList, remove)","name":"remove","unmangled":false,"doc":"/**\n\t * Removes a single instance of the specified element from this list,\n\t * if it is present (optional operation).\n\t * @return true if at least one occurence of the element has been\n\t * removed\n\t */","genericTypes":[],"fullName":"structs_ArrayList__ArrayList_remove","modifiers":[],"type":"memberFunction","returnType":"Bool"}],["set",{"arguments":[["index","Int",null],["element","T",null]],"extern":false,"tag":"memberFunction(ArrayList, set)","name":"set","unmangled":false,"doc":"/**\n\t * Replaces the element at the specified position in this list with\n\t * the specified element.\n\t */","genericTypes":[],"fullName":"structs_ArrayList__ArrayList_set","modifiers":[],"type":"memberFunction","returnType":"T"}],["size",{"arguments":[],"extern":false,"tag":"memberFunction(ArrayList, size)","name":"size","unmangled":false,"doc":"/**\n\t * @return the number of elements in this list.\n\t */","genericTypes":[],"fullName":"structs_ArrayList__ArrayList_size","modifiers":[],"type":"memberFunction","returnType":"Int"}],["ensureCapacity",{"arguments":[["newSize","Int",null]],"extern":false,"tag":"memberFunction(ArrayList, ensureCapacity)","name":"ensureCapacity","unmangled":false,"doc":"/** \n\t * Increases the capacity of this ArrayList instance, if necessary,\n\t * to ensure that it can hold at least the number of elements\n\t * specified by the minimum capacity argument.\n\t */","genericTypes":[],"fullName":"structs_ArrayList__ArrayList_ensureCapacity","modifiers":[],"type":"memberFunction","returnType":null}],["grow",{"arguments":[],"extern":false,"tag":"memberFunction(ArrayList, grow)","name":"grow","unmangled":false,"doc":"/** private */","genericTypes":[],"fullName":"structs_ArrayList__ArrayList_grow","modifiers":[],"type":"memberFunction","returnType":null}],["checkIndex",{"arguments":[["index","Int",null]],"extern":false,"tag":"memberFunction(ArrayList, checkIndex)","name":"checkIndex","unmangled":false,"doc":"/** private */","genericTypes":[],"fullName":"structs_ArrayList__ArrayList_checkIndex","modifiers":[],"type":"memberFunction","returnType":null}],["iterator",{"arguments":[],"extern":false,"tag":"memberFunction(ArrayList, iterator)","name":"iterator","unmangled":false,"doc":null,"genericTypes":[],"fullName":"structs_ArrayList__ArrayList_iterator","modifiers":[],"type":"memberFunction","returnType":"Iterator"}],["clone",{"arguments":[],"extern":false,"tag":"memberFunction(ArrayList, clone)","name":"clone","unmangled":false,"doc":null,"genericTypes":[],"fullName":"structs_ArrayList__ArrayList_clone","modifiers":[],"type":"memberFunction","returnType":"ArrayList"}],["toArray",{"arguments":[],"extern":false,"tag":"memberFunction(ArrayList, toArray)","name":"toArray","unmangled":false,"doc":"/** */","genericTypes":[],"fullName":"structs_ArrayList__ArrayList_toArray","modifiers":[],"type":"memberFunction","returnType":"Pointer"}],["data",{"extern":false,"tag":"field(ArrayList, data)","name":"data","value":null,"modifiers":[],"type":"field","varType":"pointer(T)"}],["capacity",{"extern":false,"tag":"field(ArrayList, capacity)","name":"capacity","value":null,"modifiers":[],"type":"field","varType":"Int"}],["size",{"extern":false,"tag":"field(ArrayList, size)","name":"size","value":null,"modifiers":[],"type":"field","varType":"Int"}]]}],["ArrayListIterator",{"abstract":false,"extends":"Iterator","tag":"ArrayListIterator","name":"ArrayListIterator","unmangled":false,"doc":null,"fullName":"structs_ArrayList__ArrayListIterator","type":"class","members":[["new",{"arguments":[["list","ArrayList",null]],"extern":false,"tag":"memberFunction(ArrayListIterator, new)","name":"new","unmangled":false,"doc":null,"genericTypes":["T"],"fullName":"structs_ArrayList__ArrayListIterator_new","modifiers":["static"],"type":"memberFunction","returnType":"ArrayListIterator"}],["init",{"arguments":[["list","ArrayList",null]],"extern":false,"tag":"memberFunction(ArrayListIterator, init)","name":"init","unmangled":false,"doc":null,"genericTypes":[],"fullName":"structs_ArrayList__ArrayListIterator_init","modifiers":[],"type":"memberFunction","returnType":null}],["hasNext",{"arguments":[],"extern":false,"tag":"memberFunction(ArrayListIterator, hasNext)","name":"hasNext","unmangled":false,"doc":null,"genericTypes":[],"fullName":"structs_ArrayList__ArrayListIterator_hasNext","modifiers":[],"type":"memberFunction","returnType":"Bool"}],["next",{"arguments":[],"extern":false,"tag":"memberFunction(ArrayListIterator, next)","name":"next","unmangled":false,"doc":null,"genericTypes":[],"fullName":"structs_ArrayList__ArrayListIterator_next","modifiers":[],"type":"memberFunction","returnType":"T"}],["hasPrev",{"arguments":[],"extern":false,"tag":"memberFunction(ArrayListIterator, hasPrev)","name":"hasPrev","unmangled":false,"doc":null,"genericTypes":[],"fullName":"structs_ArrayList__ArrayListIterator_hasPrev","modifiers":[],"type":"memberFunction","returnType":"Bool"}],["prev",{"arguments":[],"extern":false,"tag":"memberFunction(ArrayListIterator, prev)","name":"prev","unmangled":false,"doc":null,"genericTypes":[],"fullName":"structs_ArrayList__ArrayListIterator_prev","modifiers":[],"type":"memberFunction","returnType":"T"}],["remove",{"arguments":[],"extern":false,"tag":"memberFunction(ArrayListIterator, remove)","name":"remove","unmangled":false,"doc":null,"genericTypes":[],"fullName":"structs_ArrayList__ArrayListIterator_remove","modifiers":[],"type":"memberFunction","returnType":"Bool"}],["list",{"extern":false,"tag":"field(ArrayListIterator, list)","name":"list","value":null,"modifiers":[],"type":"field","varType":"ArrayList"}],["index",{"extern":false,"tag":"field(ArrayListIterator, index)","name":"index","value":null,"modifiers":[],"type":"field","varType":"Int"}]]}]]