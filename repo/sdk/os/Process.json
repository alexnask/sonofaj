[["!module",{"tag":"!module","path":"os/Process","type":"module","imports":["lang/math","lang/vararg","lang/memory","lang/system","lang/stdio","lang/types","Env","Pipe","PipeReader","unistd","wait","structs/ArrayList","structs/HashMap","text/StringBuffer"]}],["Process",{"abstract":false,"extends":"Object","tag":"Process","name":"Process","unmangled":false,"doc":null,"fullName":"os_Process__Process","genericTypes":[],"type":"class","members":[["new",{"arguments":[["args","ArrayList",null]],"extern":false,"tag":"memberFunction(Process, new)","name":"new","unmangled":false,"doc":null,"genericTypes":[],"fullName":"os_Process__Process_new","modifiers":["static"],"type":"memberFunction","returnType":"Process"}],["init",{"arguments":[["args","ArrayList",null]],"extern":false,"tag":"memberFunction(Process, init)","name":"init","unmangled":false,"doc":null,"genericTypes":[],"fullName":"os_Process__Process_init","modifiers":[],"type":"memberFunction","returnType":null}],["new",{"arguments":[["args","ArrayList",null],["env","HashMap",null]],"extern":false,"tag":"memberFunction(Process, new~withEnv)","name":"new~withEnv","unmangled":false,"doc":null,"genericTypes":[],"fullName":"os_Process__Process_new_withEnv","modifiers":["static"],"type":"memberFunction","returnType":"Process"}],["init",{"arguments":[["args","ArrayList",null],["env","HashMap",null]],"extern":false,"tag":"memberFunction(Process, init~withEnv)","name":"init~withEnv","unmangled":false,"doc":null,"genericTypes":[],"fullName":"os_Process__Process_init_withEnv","modifiers":[],"type":"memberFunction","returnType":null}],["setStdout",{"arguments":[["stdOut","Pipe",null]],"extern":false,"tag":"memberFunction(Process, setStdout)","name":"setStdout","unmangled":false,"doc":null,"genericTypes":[],"fullName":"os_Process__Process_setStdout","modifiers":[],"type":"memberFunction","returnType":null}],["setStdin",{"arguments":[["stdIn","Pipe",null]],"extern":false,"tag":"memberFunction(Process, setStdin)","name":"setStdin","unmangled":false,"doc":null,"genericTypes":[],"fullName":"os_Process__Process_setStdin","modifiers":[],"type":"memberFunction","returnType":null}],["setStderr",{"arguments":[["stdErr","Pipe",null]],"extern":false,"tag":"memberFunction(Process, setStderr)","name":"setStderr","unmangled":false,"doc":null,"genericTypes":[],"fullName":"os_Process__Process_setStderr","modifiers":[],"type":"memberFunction","returnType":null}],["setEnv",{"arguments":[["env","HashMap",null]],"extern":false,"tag":"memberFunction(Process, setEnv)","name":"setEnv","unmangled":false,"doc":null,"genericTypes":[],"fullName":"os_Process__Process_setEnv","modifiers":[],"type":"memberFunction","returnType":null}],["setCwd",{"arguments":[["cwd","String",null]],"extern":false,"tag":"memberFunction(Process, setCwd)","name":"setCwd","unmangled":false,"doc":null,"genericTypes":[],"fullName":"os_Process__Process_setCwd","modifiers":[],"type":"memberFunction","returnType":null}],["execute",{"arguments":[],"extern":false,"tag":"memberFunction(Process, execute)","name":"execute","unmangled":false,"doc":null,"genericTypes":[],"fullName":"os_Process__Process_execute","modifiers":[],"type":"memberFunction","returnType":"Int"}],["wait",{"arguments":[],"extern":false,"tag":"memberFunction(Process, wait)","name":"wait","unmangled":false,"doc":"/** Wait for the process to end. Bad things will happen if you haven't called `executeNoWait` before. */","genericTypes":[],"fullName":"os_Process__Process_wait","modifiers":[],"type":"memberFunction","returnType":"Int"}],["executeNoWait",{"arguments":[],"extern":false,"tag":"memberFunction(Process, executeNoWait)","name":"executeNoWait","unmangled":false,"doc":"/** Execute the process without waiting for it to end. You have to call `wait` manually. */","genericTypes":[],"fullName":"os_Process__Process_executeNoWait","modifiers":[],"type":"memberFunction","returnType":null}],["getOutput",{"arguments":[],"extern":false,"tag":"memberFunction(Process, getOutput)","name":"getOutput","unmangled":false,"doc":"/**\n     * Execute the process, and return all the output to stdout\n     * as a string\n     */","genericTypes":[],"fullName":"os_Process__Process_getOutput","modifiers":[],"type":"memberFunction","returnType":"String"}],["getErrOutput",{"arguments":[],"extern":false,"tag":"memberFunction(Process, getErrOutput)","name":"getErrOutput","unmangled":false,"doc":"/**\n     * Execute the process, and return all the output to stderr\n     * as a string\n     */","genericTypes":[],"fullName":"os_Process__Process_getErrOutput","modifiers":[],"type":"memberFunction","returnType":"String"}],["communicate",{"arguments":[["data","String",null],["stdoutData","pointer(String)",null],["stderrData","pointer(String)",null]],"extern":false,"tag":"memberFunction(Process, communicate)","name":"communicate","unmangled":false,"doc":"/** \n     * Send `data` to the process, wait for the process to end and get the\n     * stdout and stderr data. You have to do `setStdIn(Pipe new())`/\n     * `setStdOut(Pipe new())`/`setStdErr(Pipe new())`\n     * before in order to send / get the data. You have to run `executeNoWait` before.\n     * You can pass null as data, stdoutData or stderrData.\n     */","genericTypes":[],"fullName":"os_Process__Process_communicate","modifiers":[],"type":"memberFunction","returnType":"Int"}],["args",{"extern":false,"tag":"field(Process, args)","name":"args","value":null,"modifiers":[],"type":"field","varType":"ArrayList"}],["executable",{"extern":false,"tag":"field(Process, executable)","name":"executable","value":null,"modifiers":[],"type":"field","varType":"String"}],["stdOut",{"extern":false,"tag":"field(Process, stdOut)","name":"stdOut","value":null,"modifiers":[],"type":"field","varType":"Pipe"}],["stdIn",{"extern":false,"tag":"field(Process, stdIn)","name":"stdIn","value":null,"modifiers":[],"type":"field","varType":"Pipe"}],["stdErr",{"extern":false,"tag":"field(Process, stdErr)","name":"stdErr","value":null,"modifiers":[],"type":"field","varType":"Pipe"}],["buf",{"extern":false,"tag":"field(Process, buf)","name":"buf","value":null,"modifiers":[],"type":"field","varType":"pointer(String)"}],["stdoutPipe",{"extern":false,"tag":"field(Process, stdoutPipe)","name":"stdoutPipe","value":null,"modifiers":[],"type":"field","varType":"Pipe"}],["env",{"extern":false,"tag":"field(Process, env)","name":"env","value":null,"modifiers":[],"type":"field","varType":"HashMap"}],["cwd",{"extern":false,"tag":"field(Process, cwd)","name":"cwd","value":null,"modifiers":[],"type":"field","varType":"String"}]]}]]